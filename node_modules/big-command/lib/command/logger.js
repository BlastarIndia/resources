var levels = {
  info: 'green',
  data: 'grey',
  warn: 'yellow',
  error: 'red',
  help: 'cyan'
};

var logger = exports;

logger.log = function (level, data) {
  if (typeof this.emit === 'function') {
    this.emit('logger::log', { level: level, data: data });
  }
  console.log(level[levels[level]] + ':', data);
}

function hoistLevels (levels) {
  Object.keys(levels).forEach(function(level){
    logger[level] = function (data) {
      logger.log(level, data);
    }
  });
};


function pad (str, count) {
  for (var i = 0; i < count; i++) {
    str += " ";
  }
  return str;
};

logger.row  = function (items, spacing) {
  
  var str = '';
  
  items.forEach(function(item){
    
    if(spacing > item.length) {
      str += pad(item, spacing - item.length);
    } else {
      //str += pad(item, val);
      str += item;
    }
    
  });
  
  console.log(str);
  return str;
  
};

function putObject (obj) {
  
  // Is this an array?
  
    // Is this an array of objects?
    // or is this an array of just strings?
  
  // Else, is this an object?
  
  // Else, it's probably a String or Number, leave it alone
  
  
};

hoistLevels(levels);